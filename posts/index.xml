<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://wangjieshuai.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2019 00:08:06 +0800</lastBuildDate>
    
	<atom:link href="https://wangjieshuai.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Colon_classroom_note</title>
      <link>https://wangjieshuai.github.io/posts/colon_classroom_note/</link>
      <pubDate>Mon, 09 Sep 2019 00:08:06 +0800</pubDate>
      
      <guid>https://wangjieshuai.github.io/posts/colon_classroom_note/</guid>
      <description>chapter01 低级语言 重实现, 重过程
高级语言 重描述, 重目标
框架和库 框架  协同工作的类或函数 复杂应用中宏观管理上选取框架以控制整体的结构和流程 使设计者在特定领域整体设计上不必重新造轮子 约束开发者 控制反转(ioc), 框架调用开发者代码  库  应用在微观上利用库来解决具体的细节问题 是开发者摆脱底层代码, 专注于特定问题和业务逻辑 给开发者自由 开发者代码调用库函数  设计模式和架构 设计模式是软件的战术思想, 架构是软件的战略思想, 他们不是软件产品,而是软件思想.
图灵完备 一个能计算出每个图灵可计算函数 Turing-computable function的计算系统成为图灵完备的
chapter02 命令范式 行动导向, 算法显性, 目标隐性
世界观 程序是由若干行动指令组成的有序列表
方法论 用变量存储数据, 用语句执行指令
过程式编程 指引入了过程procedure, 函数function 或子程序subroutine/subprogram的命令式编程
声明范式 目标驱动, 目标显性, 算法隐性
函数式编程 逻辑式编程 迭代和递归 命令式语言 - 提倡迭代而不鼓励递归 更符合命令式思维, 递归开销大
声明式语言 - 提倡递归而不鼓励迭代 语法不允许迭代的循环变量, 且迭代着眼微观过程而递归着眼宏观规律
编程寻求一种机制, 将指定的输入转化为制定的输出.
对象范式 以数据为中心组织逻辑,将系统视为相互作用的对象集合,并利用继承于多态来增强可维护性, 可扩展性和可重用性.</description>
    </item>
    
    <item>
      <title>JS Blog</title>
      <link>https://wangjieshuai.github.io/posts/blog/</link>
      <pubDate>Sat, 11 May 2019 15:57:06 +0800</pubDate>
      
      <guid>https://wangjieshuai.github.io/posts/blog/</guid>
      <description> Start  hello world  </description>
    </item>
    
  </channel>
</rss>